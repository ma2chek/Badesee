package de.metamob.badesee;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.TableRow;
import android.widget.TextView;

public class DetailActivity extends Activity {
	Badestelle aktuelleBadestelle;
	Intent mainIntent; 
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		mainIntent = new Intent(this, MainActivity.class);
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_detail);
		
		
		final TableRow l = (TableRow) findViewById(R.id.tableRow1);
		l.setClickable(true);
		l.setOnClickListener(new OnClickListener(){
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				startActivity(mainIntent);
				 overridePendingTransition (R.anim.open_main, R.anim.close_next);
			}
		   	
		});
	}
	
	@Override
	protected void onStart(){
		
		setData();
	}
	
	private void setData(){
		Bundle extras = getIntent().getExtras();
		
		while (aktuelleBadestelle == null){
			super.onStart();
			aktuelleBadestelle = (Badestelle)extras.getSerializable("badestelle");
			
			TextView profil = (TextView) findViewById(R.id.TextView_profil);
		
			TextView badestelle = (TextView) findViewById(R.id.TextView_badestelle);
			TextView bezirk = (TextView) findViewById(R.id.TextView_bezirk);
			TextView datum = (TextView) findViewById(R.id.TextView_datum);
			TextView ecoli = (TextView) findViewById(R.id.TextView_ecoli);
			TextView enterokokken = (TextView) findViewById(R.id.TextView_enterokokken);
			TextView sichttiefe = (TextView) findViewById(R.id.TextView_sichttiefe);
			
			ImageView wasserqualitaet1 = (ImageView) findViewById(R.id.imageView_wasserqualitaet1);
			ImageView wasserqualitaet2 = (ImageView) findViewById(R.id.ImageView_wasserqualitaet2);
			
			profil.setText(aktuelleBadestelle.getProfil());		
			badestelle.setText(aktuelleBadestelle.getName());
			bezirk.setText(aktuelleBadestelle.getBezirk());
			datum.setText("vom "+aktuelleBadestelle.getDatum());
			ecoli.setText(aktuelleBadestelle.getEcoli());
			enterokokken.setText(aktuelleBadestelle.getEnterokokken());
			sichttiefe.setText(aktuelleBadestelle.getSichttiefe());
			
			int id = this.getResources().getIdentifier(aktuelleBadestelle.getWasserqualitaet(), "drawable", "de.metamob.badesee");
			wasserqualitaet1.setImageResource(id);   
			wasserqualitaet2.setImageResource(id);   
		}		
	}
	
	
	
	
	
	
	private void setDefaultFont() {

	    try {
	        final Typeface bold = Typeface.createFromAsset(getAssets(), DEFAULT_BOLD_FONT_FILENAME);
	        final Typeface italic = Typeface.createFromAsset(getAssets(), DEFAULT_ITALIC_FONT_FILENAME);
	        final Typeface boldItalic = Typeface.createFromAsset(getAssets(), DEFAULT_BOLD_ITALIC_FONT_FILENAME);
	        final Typeface regular = Typeface.createFromAsset(getAssets(),DEFAULT_NORMAL_FONT_FILENAME);

	        Field DEFAULT = Typeface.class.getDeclaredField("DEFAULT");
	        DEFAULT.setAccessible(true);
	        DEFAULT.set(null, regular);

	        Field DEFAULT_BOLD = Typeface.class.getDeclaredField("DEFAULT_BOLD");
	        DEFAULT_BOLD.setAccessible(true);
	        DEFAULT_BOLD.set(null, bold);

	        Field sDefaults = Typeface.class.getDeclaredField("sDefaults");
	        sDefaults.setAccessible(true);
	        sDefaults.set(null, new Typeface[]{
	                regular, bold, italic, boldItalic
	        });

	    } catch (NoSuchFieldException e) {
	        logFontError(e);
	    } catch (IllegalAccessException e) {
	        logFontError(e);
	    } catch (Throwable e) {
	        //cannot crash app if there is a failure with overriding the default font!
	        logFontError(e);
	    }
	}
	
	
	
	
	
}
