package de.metamob.badesee;

import java.io.BufferedReader;
import java.io.Console;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONTokener;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.GoogleMap.OnMarkerClickListener;
import com.google.android.gms.maps.MapFragment;
import com.google.android.gms.maps.model.BitmapDescriptorFactory;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;

import android.app.Activity;
import android.app.ActionBar;
import android.app.Fragment;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.text.Layout;
import android.view.DragEvent;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnDragListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.view.animation.Animation;
import android.view.animation.AnimationSet;
import android.view.animation.LayoutAnimationController;
import android.view.animation.TranslateAnimation;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.os.Build;

public class MainActivity extends Activity {

	final List <Badestelle> badestellen = new ArrayList<Badestelle>();
	private GoogleMap map;
	private int actualPosition = 0;
	private boolean hSwipeDone = true;
	private float horizontalSwipeGate = 0.3f;
	
	DragListView l;
	
	
	Intent detailIntent; // = new Intent(this, DetailActivity.class);
	ListView mainLayout;
	List <Marker> markers = new ArrayList<Marker>();
	Badestelle bs;
	
	@Override
	protected void onStart(){
		System.out.println("################# DA");
		super.onStart();
		mainLayout = (ListView) findViewById(R.id.listView1);
		hSwipeDone = true;
		/*
		mainLayout.setOnTouchListener(new OnSwipeTouchListener(this){
			public void onSwipeLeft() {
				if (actualPosition != -1){
				System.out.println("JIPPE");
		        detailIntent.putExtra("badestelle", bs);
		        startActivity(detailIntent);
		        overridePendingTransition (R.anim.open_next, R.anim.close_main);
		     	}
			}
		});
		if (actualPosition >= 0){
			map.moveCamera(CameraUpdateFactory.newLatLngZoom(badestellen.get(actualPosition).getCoordinates(), 12));
		}*/
	}
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		System.out.println("################# HIOER");
		
		detailIntent = new Intent(this, DetailActivity.class);
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		if (savedInstanceState == null) {
			getFragmentManager().beginTransaction()
					.add(R.id.container, new PlaceholderFragment()).commit();
		}
		//test
		
		parseJSON();
		initilizeMap();
		
		l  = (DragListView) findViewById(R.id.listView1);
		ArrayAdapter<Badestelle> badestellenAdapter = new BadestellenAdapter(this, android.R.layout.simple_list_item_1, badestellen);
		l.setAdapter(badestellenAdapter);
		
		/*
		l.setOnItemClickListener(new OnItemClickListener() {
			@Override
	        public void onItemClick(AdapterView<?> parent, View view,
	            final int position, long id) {
				if (position == actualPosition){
					System.out.println("CLICK");
					actualPosition = position;
					detailIntent.putExtra("badestelle", bs);
			        startActivity(detailIntent);
			        overridePendingTransition (R.anim.open_next, R.anim.close_main);
				}
				
				actualPosition = position;
				bs = badestellen.get(actualPosition);
	         
	          ((BadestellenAdapter) l.getAdapter()).setItemSelected( actualPosition);	         
			  //view.setSelected(true);
	          
	          //l.setSelection(position);
	         // l.smoothScrollToPosition(markers.indexOf(position));
	          l.invalidateViews();
	          
	          map.animateCamera(CameraUpdateFactory.newLatLngZoom(bs.getCoordinates(), 15), 2000, null); 
	          System.out.println("select "+ bs.getName()+" // "+bs.getWasserqualitaet()) ;
	        }
	    });*/
		
		l.setOnItemDragListener(new OnItemDragListener() {
			
			@Override
			public void onItemDrag(int position, float hSwipe, View view) {
				// TODO Auto-generated method stub
								
				if (hSwipe<0 && hSwipeDone && position != actualPosition){
					/*
					Color col = new Color();					
					int color = 255-(int)((hSwipe/-horizontalSwipeGate)*204);
					System.out.println("COL "+color);
					view.setBackgroundColor(Color.rgb(color,color,color));
					*/
					
					LinearLayoutView linearView = (LinearLayoutView)view;
					
					linearView.setStepplessVisibility((hSwipe/-horizontalSwipeGate));
					((BadestellenAdapter) l.getAdapter()).getActualRowView().setStepplessVisibility(1-(hSwipe/-horizontalSwipeGate));
					
					
					if (hSwipe<-horizontalSwipeGate ){
						
						if (position != actualPosition){
							actualPosition = position;
							//map.moveCamera(CameraUpdateFactory.newLatLngZoom(badestellen.get(actualPosition).getCoordinates(), 12));
						}
						System.out.println("SWIPE");
						((BadestellenAdapter) l.getAdapter()).setItemSelected( actualPosition);	  
				         l.invalidateViews();
				          
						 
						 detailIntent.putExtra("badestelle", badestellen.get(actualPosition));
					     startActivity(detailIntent);
					     overridePendingTransition (R.anim.open_next, R.anim.close_main);
					     hSwipeDone = false;
					} 
				}
			}

			@Override
			public void onItemDragEnded(int position, View view) {
				// TODO Auto-generated method stub
				if (position == actualPosition && hSwipeDone){
					System.out.println("CLICK");
					detailIntent.putExtra("badestelle", badestellen.get(actualPosition));
			        startActivity(detailIntent);
			        overridePendingTransition (R.anim.open_next, R.anim.close_main);
				} else {
					actualPosition = position;
					map.animateCamera(CameraUpdateFactory.newLatLngZoom( badestellen.get(actualPosition).getCoordinates(), 15), 2000, null); 					
				}
				
				view.setBackgroundColor(getResources().getColor( R.color.selected_color));
				((BadestellenAdapter) l.getAdapter()).setItemSelected( actualPosition);
				l.invalidateViews();
			}
		});
				
		/*
		l.setOnItemLongClickListener(new OnItemLongClickListener() {
			@Override
	        public boolean onItemLongClick(AdapterView<?> parent, View view,
	                final int position, long id) {
				actualPosition = position;
	          bs = badestellen.get(position);
	          
	          ((BadestellenAdapter) l.getAdapter()).setItemSelected( actualPosition );
			 // l.setSelection( markers.indexOf(position) );
			 // l.smoothScrollToPositionFromTop(markers.indexOf(position),25,1000);
	          System.out.println("LOOOONG select "+ bs.getName()+" // "+bs.getWasserqualitaet()) ;
	          detailIntent.putExtra("badestelle", bs);
	          startActivity(detailIntent);
	          overridePendingTransition (R.anim.open_next, R.anim.close_main);
	          
	          return false;
	        }
	    });		*/
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {

		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(R.layout.fragment_main, container,
					false);
			return rootView;
		}
	}
	
	public void parseJSON(){		
		try {
			JSONObject jObject = Json.getJson("http://www.metamob.de/ema/Badewasser.jsaon");
			jObject = (jObject==null)?new JSONObject(readJSON("Badewasser.json")):jObject;
			
			
		//	JSONObject jObject = new JSONObject(readJSON("Badewasser.json"));
			JSONArray jsonArray = jObject.getJSONArray("index");
			for (int i = 0; i < jsonArray.length(); i++) {			
		        JSONObject jsonObject = jsonArray.getJSONObject(i);
		        badestellen.add( new Badestelle( jsonObject.getString("id"), 
		        		 	jsonObject.getString("badname"), 
		        		 	jsonObject.getString("profil"), 
		        		 	jsonObject.getString("bezirk"), 
		        		 	jsonObject.getString("dat"),
		        		 	jsonObject.getString("sicht"), 
		        		 	jsonObject.getString("ente"), 
		        		 	jsonObject.getString("eco"),
		        		 	jsonObject.getString("farbe"),
		        		 	jsonObject.getString("profillink"),
		        		 	jsonObject.getString("coordinates"),
		        		 	jsonObject.getString("badestellelink"))
		        );
		     }
			 Collections.sort(badestellen);
			 
		} catch (JSONException e) {
			System.out.println("murks");
            e.printStackTrace();
        }
	}
	
	public String readJSON(String filename){		
		String json = null;
	    try {
	        InputStream is = getAssets().open(filename);
	        //"ISO-8859-1"
	        int size = is.available();
	        byte[] buffer = new byte[size];
	        is.read(buffer);
	        is.close();
	        json = new String(buffer);//, "UTF-8");
	        //System.out.println("json "+json);
	    } catch (IOException ex) {
	        ex.printStackTrace();
	        return null;
	    }
	    return json;
	}
	
	private void initilizeMap() {
		map = ((MapFragment) getFragmentManager().findFragmentById(R.id.map))
		        .getMap();
		if (map != null){
		map.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(52.5234051f, 13.4113999f), 10), 2000, null);
		map.setOnMarkerClickListener(new OnMarkerClickListener() {
			
			@Override
			public boolean onMarkerClick(Marker marker) {
				// TODO Auto-generated method stub
				l.invalidateViews();
				actualPosition =  markers.indexOf(marker);
				
				((BadestellenAdapter) l.getAdapter()).setItemSelected(actualPosition);
				
							
				//l.setSelection( markers.indexOf(marker) );
				l.smoothScrollToPosition(actualPosition);
				//l.smoothScrollToPositionFromTop(markers.indexOf(marker),25,1000);
				return false;
			}
		});
			
			
        if (map != null) {
        	System.out.println("HIER");
        	
        	int counter = 0;
        	for (Badestelle thisBadestelle : badestellen){
        		
        		//String wq = thisBadestelle.getWasserqualitaet();
        		//float markerColor = (wq.equals("gruen")?BitmapDescriptorFactory.HUE_GREEN: (wq.equals("gelb")?BitmapDescriptorFactory.HUE_YELLOW: BitmapDescriptorFactory.HUE_RED));

        		markers.add(map.addMarker(new MarkerOptions()
  	          .position( thisBadestelle.getCoordinates())
  	          .title(thisBadestelle.getName())
  	          .icon(BitmapDescriptorFactory.defaultMarker(thisBadestelle.getMarker()))));
        		
        	}
        }        
    }
	}
}
